{"version":3,"file":"static/js/93.bb045b49.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","utils/TMDB_API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  max-width: 1200px;\n  max-height: 500px;\n\n  padding: 20px;\n  border-radius: 2px;\n  overflow-y: scroll;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  overflow: overlay;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  width: 200px;\n\n  padding: 10px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  & img {\n    height: 300px;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      transform: scale(1.02);\n    }\n  }\n`;\n\nexport const About = styled.div`\n  margin-top: 10px;\n  font-size: 15px;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  margin-bottom: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast, profilePath } from '../../utils/TMDB_API';\nimport { Wrapper, List, Item, About, Name } from './Cast.styled';\nimport img from '../../images/no_image_placeholder.png';\nimport { Loader } from '../Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    const fetchMovieCast = async () => {\n      try {\n        const { cast } = await getMovieCast(Number(movieId));\n        const minCast = cast.slice(0, 15);\n        setCast(minCast);\n      } catch (error) {\n        errorMesage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  const errorMesage = message => {\n    toast.error(`Oops, something went wrong: ${message}`);\n  };\n\n  return (\n    <>\n      {!isLoading && cast && cast.length > 0 ? (\n        <Wrapper>\n          <List>\n            {cast.map(({ id, profile_path, name, character }) => (\n              <Item key={id}>\n                <img\n                  src={profile_path !== null ? profilePath(profile_path) : img}\n                  alt={name}\n                ></img>\n                <About>\n                  {name ? <Name>{name}</Name> : ''}\n                  {character ? <p>Character: {character}</p> : ''}\n                </About>\n              </Item>\n            ))}\n          </List>\n        </Wrapper>\n      ) : (\n        !isLoading &&\n        cast &&\n        cast.length === 0 && <h2>We don't have any cast for this movie.</h2>\n      )}\n      <ToastContainer autoClose={2500}></ToastContainer>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Cast;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <InfinitySpin width={350} color=\"#553c9a\" />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nimport defaultPoster from '../images/no_poster_placeholder.png';\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '28dcdbd0943bf495601cda9c26c777d2';\n\nconst trendingMovie = 'trending/movie/day';\nconst searchByQuery = 'search/movie';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}${trendingMovie}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${baseURL}${searchByQuery}`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const posterMovie = poster_path => {\n  const posterUrl = 'https://image.tmdb.org/t/p/w300/';\n  const defaultImg = defaultPoster;\n  if (!poster_path) {\n    return defaultImg;\n  }\n  return `${posterUrl}${poster_path}`;\n};\n\nexport const profilePath = profile_path => {\n  const profileImg = `https://image.tmdb.org/t/p/w200/${profile_path}`;\n  return profileImg;\n};\n"],"names":["Wrapper","styled","List","Item","About","Name","useState","cast","setCast","movieId","useParams","isLoading","setIsLoading","useEffect","fetchMovieCast","getMovieCast","Number","minCast","slice","errorMesage","message","toast","length","map","id","profile_path","name","character","src","profilePath","img","alt","autoClose","Loader","style","position","left","top","transform","width","color","baseURL","API_KEY","getTrendingMovies","axios","data","getMovieByQuery","query","params","api_key","page","include_adult","getMovieDetails","getMovieReviews","posterMovie","poster_path","defaultImg","defaultPoster"],"sourceRoot":""}