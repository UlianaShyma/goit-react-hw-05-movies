{"version":3,"file":"static/js/859.efd135c4.chunk.js","mappings":"oYAMMA,EAAuBC,EAAAA,cAAoB,CAAC,GA2BlD,SAASC,EAAT,GAMI,IANgL,IAC5KC,EAAIC,EAAIC,EADoK,IAAhKC,MAAAA,OAAgK,MAAxJ,EAAwJ,EAA5IC,EAA4I,EAArJC,QAA6BC,EAAwH,EAAnIC,UAA4BC,EAAuG,EAAvGA,mBAAoBC,EAAmF,EAAnFA,gBAAmF,IAAlEC,OAAAA,OAAkE,SAA3CC,EAA2C,EAAlDC,MAAqBC,GAA6B,YAE1KC,EAAsBhB,EAAAA,WAAiBD,GACvCkB,GAAoB,UAAKF,GAG/B,MAA2BG,OAAOC,QAAQJ,GAA1C,eAAsE,CAAjE,sBAAOK,EAAP,KACoB,qBADpB,aAEUH,EAAkBG,EAEhC,CAED,IAAMC,GAAe,0BACdL,GACAC,GAFW,IAGdL,OAAAA,IAGEE,GAAQ,kBACPD,GAzCX,YAAyK,IAAlIS,EAAkI,EAAlIA,UAAWC,EAAuH,EAAvHA,eAAgBC,EAAuG,EAAvGA,MAAOC,EAAgG,EAAhGA,OAAQC,EAAwF,EAAxFA,aAAcd,EAA0E,EAA1EA,OAAQe,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,SAAuD,IAA7CC,gBAAAA,OAA6C,SAC/Jf,EAAQ,CAAC,EAmBf,MAlBkB,QAAda,IACAb,EAAM,yBAA2B,WACb,kBAAbc,IACPd,EAAM,wBAAN,UAAmCc,EAAnC,MACCC,IACDf,EAAM,4BAA8B,QACnB,kBAAVU,GAAuC,kBAAVA,IACpCV,EAAMU,MAAQA,GACI,kBAAXC,GAAyC,kBAAXA,IACrCX,EAAMW,OAASA,GACS,kBAAjBC,GAAqD,kBAAjBA,IAC3CZ,EAAMY,aAAeA,GACrBd,IACAE,EAAMY,aAAe,OACA,qBAAdJ,IACPR,EAAM,gBAAkBQ,GACE,qBAAnBC,IACPT,EAAM,qBAAuBS,GAC1BT,CACV,CAqBUgB,CAA4BT,IAE/BZ,EAAY,yBACZD,IACAC,GAAa,IAAJ,OAAQD,IAIrB,IAHA,IAAMuB,EAAwC,QAA9B7B,EAAKmB,EAAaU,cAA2B,IAAP7B,GAAgBA,EAChE8B,EAAW,GACXC,EAAYC,KAAKC,KAAK9B,GACnB+B,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAChC,IAAIC,EAAYvB,EAChB,GAAImB,EAAY5B,GAAS+B,IAAMH,EAAY,EAAG,CAO1C,IAAMT,EAAmC,QAA1BrB,EAAKkC,EAAUb,aAA0B,IAAPrB,EAAgBA,EAAK,OAChEmC,EAAiBjC,EAAQ,EACzBkC,EAAmC,kBAAVf,EACzBA,EAAQc,EADU,eAEVd,EAFU,cAECc,EAFD,KAGxBD,GAAY,kBAAKA,GAAR,IAAmBb,MAAOe,GACtC,CACD,IAAMC,EAAgBxC,EAAAA,cAAoB,OAAQ,CAAES,UAAWA,EAAWK,MAAOuB,EAAWjB,IAAKgB,GAAK,UAClGL,EACAC,EAASS,KAAKD,GAKdR,EAASS,KAAKzC,EAAAA,cAAoBA,EAAAA,SAAgB,CAAEoB,IAAKgB,GACrDI,EACAxC,EAAAA,cAAoB,KAAM,OAErC,CACD,OAAQA,EAAAA,cAAoB,OAAQ,CAAES,UAAWC,EAAoB,cAAeC,EAAiB,YAAa,SAAU,YAAqD,QAAvCP,EAAKiB,EAAaQ,uBAAoC,IAAPzB,GAAgBA,GAA+BE,EAClO0B,EAASU,KAAI,SAACC,EAAIP,GAAL,OAAWpC,EAAAA,cAAoBM,EAAS,CAAEc,IAAKgB,GAAKO,EAApD,IACbX,EACT,CAED,SAASY,EAAT,GAAsD,IAA7BC,EAA6B,EAA7BA,SAAaxB,GAAgB,YAClD,OAAQrB,EAAAA,cAAoBD,EAAqB+C,SAAU,CAAEC,MAAO1B,GAAgBwB,EACvF,C,+CC9FYG,EAASC,EAAAA,GAAAA,OAAH,qiBAqBNC,EAAYD,EAAAA,GAAAA,IAAH,6JAUT3C,EAAU2C,EAAAA,GAAAA,IAAH,2IASPE,EAAkBF,EAAAA,GAAAA,IAAH,2HAOfG,EAASH,EAAAA,GAAAA,IAAH,gMAUNI,EAAQJ,EAAAA,GAAAA,GAAH,8JASLK,EAAYL,EAAAA,GAAAA,EAAH,oEAKTM,EAASN,EAAAA,GAAAA,GAAH,mEAKNO,EAAOP,EAAAA,GAAAA,EAAH,2FAMJQ,EAAOR,EAAAA,GAAAA,GAAH,uHAQJS,EAAUT,EAAAA,GAAAA,IAAH,0IAQPU,EAAUV,EAAAA,GAAAA,GAAH,6H,SC/EPW,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KASAC,QAAQC,IAAIL,EAAMM,aAElB,IAAMC,EAAYP,EAAMQ,cAAgBnC,KAAKoC,MAA2B,GAArBT,EAAMQ,cACnDE,GAAYC,EAAAA,EAAAA,IAAYX,EAAMM,aAEpC,OACE,8BACGN,IACC,iCACE,UAACX,EAAD,YACE,SAACC,EAAD,WACE,SAACP,EAAD,CACE6B,gBAAgB,UAChBC,gBAAgB,UAFlB,UAIIX,IAAa,SAAC9D,EAAD,CAAUuB,MAAO,IAAKC,OAAQ,WAIjD,SAAC2B,EAAD,CACEtC,MAAOiD,EAAY,CAAC,EAAI,CAAEY,QAAS,QACnCC,IAAKL,EACLM,IAAKhB,EAAMiB,MACXtD,MAAO,IACPuD,OAAQ,kBAAMf,GAAa,EAAnB,EACRvC,OAAQsC,EAAY,IAAM,KAG5B,UAACzD,EAAD,YACE,UAAC+C,EAAD,WACGQ,EAAMiB,MADT,IApCQ,WAClB,IAAME,EAAOnB,EAAMoB,aACnB,GAAKD,EAEL,MAAO,IADSA,EAAKE,UAAU,EAAG,GACX,GACxB,CAgC4BC,OAEjB,UAAC7B,EAAD,0BAAwBc,EAAxB,QAEA,SAACb,EAAD,wBACA,SAACC,EAAD,UAAOK,EAAMuB,YAEb,SAAC7B,EAAD,sBACA,SAACE,EAAD,UACGI,EAAMwB,QACLxB,EAAMwB,OAAO3C,KAAI,SAAA4C,GAAK,OACpB,SAAC9B,EAAD,UAAsB8B,EAAMC,MAAjBD,EAAME,GADG,aAM9B,UAAC9B,EAAD,YACE,oDACA,UAACC,EAAD,YACE,SAAC,KAAD,CAAM8B,GAAG,OAAT,UACE,SAACzC,EAAD,CAAQ0C,MAAM,OAAd,qBAGF,SAAC,KAAD,CAAMD,GAAG,UAAT,UACE,SAACzC,EAAD,CAAQ0C,MAAM,UAAd,iCAQf,E,UC1CD,EA3CqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwC7B,EAAAA,EAAAA,UAAS,IAAjD,eAAO+B,EAAP,KAAqBC,EAArB,KACA,GAA0BhC,EAAAA,EAAAA,UAAS,IAAnC,eAAOiC,EAAP,KAAcC,EAAd,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,GAAKV,EAAL,CAEA,IAAMW,EAAiB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAgBC,OAAOb,IAFvB,OAEhBc,EAFgB,OAGtBX,EAAgBW,GAHM,gDAKtBT,EAAS,EAAD,IACRU,EAAY,KAAMC,SANI,yDAAH,qDASvBL,EAAkBX,EAXE,CAYrB,GAAE,CAACA,IAEJ,IAAMe,EAAc,SAAAC,GAClBC,EAAAA,GAAAA,MAAA,sCAA2CD,GAC5C,EAED,OACE,iCACIZ,GAASF,IACT,SAAC,KAAD,CAAMJ,GAAIQ,EAAV,UAAyB,SAACjD,EAAD,CAAQ6D,KAAK,SAAb,wBAG3B,SAACjD,EAAD,CAAWC,MAAOgC,KAElB,SAAC,EAAAiB,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAgBC,UAAW,SAGhC,C,6PC9CKC,EAAU,gCACVC,EAAU,mCAKHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,GADkB,OAJH,qBAIG,oBACiBC,IAFT,uBACvBlC,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBqC,EAAe,mCAAG,WAAMC,GAAN,yFACNF,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAVH,gBAU2C,CAC7DM,OAAQ,CACNC,QAASN,EACTI,MAAAA,EACAG,KAAM,EACNC,eAAe,KANU,uBACrB1C,EADqB,EACrBA,KADqB,kBAStBA,GATsB,2CAAH,sDAYfuB,EAAe,mCAAG,WAAMZ,GAAN,yFACNyB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BtB,GAAW,CAC7D4B,OAAQ,CACNC,QAASN,KAHgB,uBACrBlC,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASf2C,EAAY,mCAAG,WAAMhC,GAAN,yFACHyB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BtB,EAA7B,YAAgD,CACrE4B,OAAQ,CACNC,QAASN,KAHa,uBAClBlC,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZ4C,EAAe,mCAAG,WAAMjC,GAAN,yFACNyB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BtB,EAA7B,YAAgD,CACrE4B,OAAQ,CACNC,QAASN,EACTO,KAAM,KAJmB,uBACrBzC,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfR,EAAc,SAAAL,GACzB,IACM0D,EAAaC,EACnB,OAAK3D,EAGC,GAAN,OALkB,oCAKlB,OAAsBA,GAFb0D,CAGV,EAEYE,EAAc,SAAAC,GAEzB,MADgB,0CAAsCA,EAEvD,C","sources":["../node_modules/react-loading-skeleton/dist/index.mjs","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","utils/TMDB_API.jsx"],"sourcesContent":["'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: inline-block;\n  font-size: 15px;\n  min-width: 115px;\n  height: 38px;\n  border: none;\n  color: white;\n  border: 1px solid #ee725a;\n  border-radius: 4px;\n  font-size: 16px;\n  background-image: linear-gradient(150deg, #ee725a, #553c9a);\n  transition: border 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    border: 2px solid #553c9a;\n`;\n\nexport const CardMovie = styled.div`\n  display: flex;\n  margin-top: 20px;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-left: 20px;\n\n  @media screen and (max-width: 769px) {\n    margin-top: 20px;\n    margin-left: 0;\n  }\n`;\n\nexport const WrapperSkeleton = styled.div`\n  align-self: flex-start;\n  @media screen and (max-width: 769px) {\n    align-self: center;\n  }\n`;\n\nexport const Poster = styled.img`\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  align-self: flex-start;\n\n  @media screen and (max-width: 769px) {\n    align-self: center;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  @media screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 20px;\n  font-size: 19px;\n`;\n\nexport const Header = styled.h3`\n  margin-bottom: 5px;\n  font-size: 18px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n  font-size: 17px;\n  line-height: 1.5em;\n`;\n\nexport const List = styled.ul`\n  font-size: 15px;\n  display: flex;\n  flex-direction: row;\n  gap 5px;\n  list-style: none;\n`;\n\nexport const AddInfo = styled.div`\n  font-size: 17px;\n  margin-bottom: 20px;\n  @media screen and (min-width: 769px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const BtnList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 10px;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { posterMovie } from '../../utils/TMDB_API';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\nimport {\n  CardMovie,\n  WrapperSkeleton,\n  Poster,\n  Wrapper,\n  UserScore,\n  Title,\n  Header,\n  Text,\n  List,\n  AddInfo,\n  BtnList,\n  Button,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const [isLoadImg, setIsLoadImg] = useState(false);\n\n  const getFullYear = () => {\n    const data = movie.release_date;\n    if (!data) return;\n    const getYear = data.substring(0, 4);\n    return '(' + getYear + ')';\n  };\n\n  console.log(movie.poster_path);\n\n  const userScore = movie.vote_average && Math.floor(movie.vote_average * 10);\n  const srcPoster = posterMovie(movie.poster_path);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <CardMovie>\n            <WrapperSkeleton>\n              <SkeletonTheme\n                backgroundColor=\"#f3f3f3\"\n                foregroundColor=\"#ecebeb\"\n              >\n                {!isLoadImg && <Skeleton width={300} height={450} />}\n              </SkeletonTheme>\n            </WrapperSkeleton>\n\n            <Poster\n              style={isLoadImg ? {} : { display: 'none' }}\n              src={srcPoster}\n              alt={movie.title}\n              width={300}\n              onLoad={() => setIsLoadImg(true)}\n              height={isLoadImg ? 450 : 0}\n            />\n\n            <Wrapper>\n              <Title>\n                {movie.title} {getFullYear()}\n              </Title>\n              <UserScore>User Score: {userScore}%</UserScore>\n\n              <Header>Overview</Header>\n              <Text>{movie.overview}</Text>\n\n              <Header>Genres</Header>\n              <List>\n                {movie.genres &&\n                  movie.genres.map(genre => (\n                    <Text key={genre.id}>{genre.name}</Text>\n                  ))}\n              </List>\n            </Wrapper>\n          </CardMovie>\n          <AddInfo>\n            <h3>Additional information</h3>\n            <BtnList>\n              <Link to=\"cast\">\n                <Button label=\"Cast\">Cast</Button>\n              </Link>\n\n              <Link to=\"reviews\">\n                <Button label=\"Reviews\">Reviews</Button>\n              </Link>\n            </BtnList>\n          </AddInfo>\n        </>\n      )}\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n","import { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { getMovieDetails } from '../utils/TMDB_API';\nimport { useEffect, useState } from 'react';\nimport { MovieCard } from '../components/MovieCard';\nimport { Button } from '../components/MovieCard/MovieCard.styled';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      try {\n        const results = await getMovieDetails(Number(movieId));\n        setMovieDetails(results);\n      } catch (error) {\n        setError(error);\n        errorMesage(error.message);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  const errorMesage = message => {\n    toast.error(`Oops, something went wrong: ${message}`);\n  };\n\n  return (\n    <>\n      {!error && movieDetails && (\n        <Link to={backLinkHref}>{<Button type=\"button\">Go back</Button>}</Link>\n      )}\n\n      <MovieCard movie={movieDetails} />\n\n      <Suspense fallback={''}>\n        <Outlet />\n      </Suspense>\n      <ToastContainer autoClose={2500}></ToastContainer>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport defaultPoster from '../images/no_poster_placeholder.png';\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '28dcdbd0943bf495601cda9c26c777d2';\n\nconst trendingMovie = 'trending/movie/day';\nconst searchByQuery = 'search/movie';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}${trendingMovie}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${baseURL}${searchByQuery}`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const posterMovie = poster_path => {\n  const posterUrl = 'https://image.tmdb.org/t/p/w300/';\n  const defaultImg = defaultPoster;\n  if (!poster_path) {\n    return defaultImg;\n  }\n  return `${posterUrl}${poster_path}`;\n};\n\nexport const profilePath = profile_path => {\n  const profileImg = `https://image.tmdb.org/t/p/w200/${profile_path}`;\n  return profileImg;\n};\n"],"names":["SkeletonThemeContext","React","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","SkeletonTheme","children","Provider","value","Button","styled","CardMovie","WrapperSkeleton","Poster","Title","UserScore","Header","Text","List","AddInfo","BtnList","MovieCard","movie","useState","isLoadImg","setIsLoadImg","console","log","poster_path","userScore","vote_average","floor","srcPoster","posterMovie","backgroundColor","foregroundColor","display","src","alt","title","onLoad","data","release_date","substring","getFullYear","overview","genres","genre","name","id","to","label","movieId","useParams","movieDetails","setMovieDetails","error","setError","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","getMovieDetails","Number","results","errorMesage","message","toast","type","Suspense","fallback","autoClose","baseURL","API_KEY","getTrendingMovies","axios","getMovieByQuery","query","params","api_key","page","include_adult","getMovieCast","getMovieReviews","defaultImg","defaultPoster","profilePath","profile_path"],"sourceRoot":""}