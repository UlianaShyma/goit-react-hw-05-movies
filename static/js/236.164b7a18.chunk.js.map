{"version":3,"file":"static/js/236.164b7a18.chunk.js","mappings":"6TAIaA,EAAUC,EAAAA,GAAAA,IAAH,yEAKPC,EAAOD,EAAAA,GAAAA,GAAH,6DAKJE,EAAWF,EAAAA,GAAAA,GAAH,uXAMOG,GAkBfC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6KAWVM,EAAQN,EAAAA,GAAAA,EAAH,6G,gKC7CLO,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,KAAD,WACE,SAAC,KAAD,UACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAMK,SAFIL,EAAME,GADN,SAW1B,E,UCcD,G,QA7Ba,WACX,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,gHAEEC,EAAAA,EAAAA,MAFF,gBAEhBC,EAFgB,EAEhBA,QACRN,EAAkBM,GAHM,gDAKxBJ,EAAS,EAAD,IAVMK,EAWF,KAAMA,QAVtBC,EAAAA,GAAAA,MAAA,sCAA2CD,IAIf,kCALV,IAAAA,CAKU,uBAAH,qDASzBH,GACD,GAAE,KAGD,iCACE,4CACCL,IAAmBE,IAAS,SAACd,EAAD,CAAWC,OAAQW,KAChD,SAAC,KAAD,CAAgBU,UAAW,SAGhC,E,6PC/BKC,EAAU,gCACVC,EAAU,mCAKHN,EAAiB,mCAAG,sGACRO,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OAJH,qBAIG,oBACiBC,IAFT,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAVH,gBAU2C,CAC7DM,OAAQ,CACNC,QAASN,EACTI,MAAAA,EACAG,KAAM,EACNC,eAAe,KANU,uBACrBN,EADqB,EACrBA,KADqB,kBAStBA,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BW,GAAW,CAC7DL,OAAQ,CACNC,QAASN,KAHgB,uBACrBE,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfS,EAAY,mCAAG,WAAMD,GAAN,yFACHT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BW,EAA7B,YAAgD,CACrEL,OAAQ,CACNC,QAASN,KAHa,uBAClBE,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZU,EAAe,mCAAG,WAAMF,GAAN,yFACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BW,EAA7B,YAAgD,CACrEL,OAAQ,CACNC,QAASN,EACTO,KAAM,KAJmB,uBACrBL,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfW,EAAc,SAAAC,GACzB,IACMC,EAAaC,EACnB,OAAKF,EAGC,GAAN,OALkB,oCAKlB,OAAsBA,GAFbC,CAGV,EAEYE,EAAc,SAAAC,GAEzB,MADgB,0CAAsCA,EAEvD,C","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MovieList.jsx","pages/Home.jsx","utils/TMDB_API.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport filmIcon from '../../images/film_item_icon.png';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 40px 30px 0 40px;\n`;\n\nexport const List = styled.ul`\n  font-size: 25px;\n  color: black;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 20px;\n  position: relative;\n\n  &::before {\n    content: '';\n    background-image: url(${filmIcon});\n    background-size: cover;\n    position: absolute;\n    width: 25px;\n    height: 25px;\n    left: -32px;\n  }\n\n  &:hover,\n  &:focus {\n   linear-gradient(45deg, #553c9a, #ee4b2b);\n  }\n\n    &:first-child {\n    margin-top: 0;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 22px;\n  color: black;\n \n    transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      color: #ee4b2b;\n    }\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 18px;\n  text-align: center;\n  margin-top: 25px;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, ListItem, Wrapper, StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Wrapper>\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <StyledLink to={`movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      </Wrapper>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","import { getTrendingMovies } from '../utils/TMDB_API';\nimport { useEffect, useState } from 'react';\nimport { MovieList } from '../components/MoviesList';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  const errorMesage = message => {\n    toast.error(`Oops, something went wrong: ${message}`);\n  };\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const { results } = await getTrendingMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(error);\n        errorMesage(error.message);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today:</h1>\n      {trendingMovies && !error && <MovieList movies={trendingMovies} />}\n      <ToastContainer autoClose={2500}></ToastContainer>\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nimport defaultPoster from '../images/no_poster_placeholder.png';\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '28dcdbd0943bf495601cda9c26c777d2';\n\nconst trendingMovie = 'trending/movie/day';\nconst searchByQuery = 'search/movie';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}${trendingMovie}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${baseURL}${searchByQuery}`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${baseURL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const posterMovie = poster_path => {\n  const posterUrl = 'https://image.tmdb.org/t/p/w300/';\n  const defaultImg = defaultPoster;\n  if (!poster_path) {\n    return defaultImg;\n  }\n  return `${posterUrl}${poster_path}`;\n};\n\nexport const profilePath = profile_path => {\n  const profileImg = `https://image.tmdb.org/t/p/w200/${profile_path}`;\n  return profileImg;\n};\n"],"names":["Wrapper","styled","List","ListItem","filmIcon","StyledLink","NavLink","Error","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","fetchTrendingMovies","getTrendingMovies","results","message","toast","autoClose","baseURL","API_KEY","axios","data","getMovieByQuery","query","params","api_key","page","include_adult","getMovieDetails","movieId","getMovieCast","getMovieReviews","posterMovie","poster_path","defaultImg","defaultPoster","profilePath","profile_path"],"sourceRoot":""}